Para se estudar jatos, é necessário definir uma maneira de agrupar as partículas medidas nos detectores 
de uma maneira coerente e bem definida, como os requisitos do \emph{Snowmass accord}:

\begin{enumerate}
 \item Simples de implementar em uma análise experimental;
 \item Simples de implementar em um cálculo teórico;
 \item Definido em todas as ordens em cálculos perturbativos;
 \item Gera seções de choque finitas em todas as ordens;
 \item É insensível à hadronização;
\end{enumerate}

Para realizar a reconstrução de jatos\cite{salam_towards_2010}, costuma-se definir a seguinte quantidade:

\begin{equation}
 \Delta R_{ij} = \sqrt{(\eta_i-\eta_j)^2+(\phi_i-\phi_j)^2}
\end{equation}

Essa será, para as duas partículas, aqui chamadas de $i$ e $j$, uma distância angular
definida entre as duas. A maioria dos algoritmos de jatos irão utilizar essa definição de distância angular para realizar os agrupamentos,
ou {\it clusters} de partículas para a reconstrução dos jatos. Estes são chamados os algoritmos de cones. Um algoritmo
comumente utilizado consiste em, primeiro definir um parâmetro $R$, em seguida, escolher uma partícula {\it semente}, normalmente, escolhe-se
a partícula de maor $p_T$. Após esses passos, localizamos a partícula de maior $p_T$ a uma distância menor ou igual a $R$.
\par
Então, retiramos essas duas partículas dos dados e definimos uma nova partícula com momento:

\begin{equation}
 p_{\mu}^{J} = p_{\mu}^1 + p_{\mu}^2
\end{equation}

Essa partícula define o novo centro do cone, agora procuramos a partícula de maior $p_T$ de distância menor ou igual a $R$ desta, e assim por
diante. Os métodos de reconstrução de jatos todos irão seguir alguma rotina que envolva calcular distâncias entre os hadrons de acordo com
alguma métrica que utiliza a metida invariante acima, como eles podem precoder a partir daí varia, alguns exemplos são citados:

\begin{description}
 \item[IC-PR] são os algoritmos de cones interativos de remossão progressiva, isso
 quer dizer que eles mudam a direção do cone a cada interação e retiram os jatos um de
 cada vez;
 \item[FC-PR] são semelhantes aos {\bf IC-PR}, mas as direções dos cones são fixas ao redor
 da semente;
 \item[IC-SM] são os algoritmos que utilizam cones iterativos, mas não removem os cones
 estáveis, para lidar com \emph{overlapping}, utiliza-se métodos que envolvem atribuir cada
 partícula ao jato mais próximo ou simplesmente juntar os dois jatos, baseando-se na fração
 da quantidade de energia que o jato menos intenso que está na região de \emph{overlapping};
 \item[IC-SD] aplicam o \emph{split and drop}, ou seja, ele não une jatos que dividem muita
 energia em comum, mas simplesmente desconsideram os jatos menos intensos;
 \item[SR] são uma classe de algoritmos que combinam partículas({\it Sequential Recombination}) em jatos baseando-se
 em uma metrica pŕe-definida, que é o caso do {\it $k_T$ algorithm};
\end{description}

\subsection{\emph{Infrared Safety}}

Um dos problemas enfrentados por esses algortimos ocorre quando temos uma emissão de um \emph{soft} gluon por um dos partons
antes do processo de hadronização, como ilustrado na Figura \ref{irsafety}. No caso \subref{irfiga}, temos a destruição de um bóson W
resultando na criação de um par $q\overline{q}$. Nos casos \subref{irfigb} e \subref{irfigc}, um dos quarks emite um
\emph{soft gluon}, com a diferença de que, no primeiro destes dois, o gluon é reabsorvido pelo outro quarks.
Ambos os casos geram divergências nos cálculos que se cancelam. Entretanto, o gluon pode fazer com que o algoritmo de
\emph{clustering} faça distinção entre os dois casos, isso não permite que as divergências se cancelem.

\begin{figure}[!htb]
 \centering
 \begin{floatrow}
\subfloat[]{
 \begin{tikzpicture}[thick,scale=1]

\draw [photon] (0,0) -- (0,3) node [near start, anchor= west] {W};

\draw [fermion] (0,3) -- (-1.5,5);

\draw [afermion] (0,3) -- (1.5,5);

\end{tikzpicture}
\label{irfiga}
}

\subfloat[]{
\begin{tikzpicture}[thick,scale=1]

\draw [photon] (0,0) -- (0,3) node [near start, anchor= west] {W};

\draw [fermion] (0,3) -- (-1.5,5);

\draw [afermion] (0,3) -- (1.5,5);

\draw [gluon] (.75,4) -- (-.75,4);

\end{tikzpicture}
\label{irfigb}
}

\subfloat[]{
\begin{tikzpicture}[thick,scale=1]

\draw [photon] (0,0) -- (0,3) node [near start, anchor= west] {W};

\draw [fermion] (0,3) -- (-1.5,5);

\draw [afermion] (0,3) -- (1.5,5);

\draw [gluon] (.45,3.6) -- (0,5);

\end{tikzpicture}
\label{irfigc}
}
\end{floatrow}

\caption{Demonstração da problema de \emph{IR safety}.}
\label{irsafety}
\end{figure}

\subsection{\emph{Colinear Safety}}

Um outro problema possível nos algoritmos de \emph{clustering} são os \emph{colinear splittings},
que essencialmente traduzem a possibilidade de que um quark emita um gluon carregando grande parte
de sua energia.

\begin{figure}[!htb]
 \centering
 \begin{floatrow}
 
 \subfloat[]{
 
 \begin{tikzpicture}[thick, scale=1]
  
  \draw [blue] (0,0) -- (0,3);
  
  \draw [blue] (4,0) -- (4,5);
  
  \draw [blue] (8,0) -- (8,3);
  
  \draw [gluon] (4,2) .. controls (2,3) .. (4,4);
  
 \end{tikzpicture}
 }
 
 \subfloat[]{
 
 \begin{tikzpicture}[thick, scale=1]
  
  \draw [blue] (0,0) -- (0,3);
  
  \draw [blue] (4,0) -- (4,5);
  
  \draw [blue] (8,0) -- (8,3);
  
  \draw [gluon] (4,2) .. controls (2,3) .. (4,4);
  
 \end{tikzpicture}
 }
 
 \end{floatrow}
 
 \caption{Legenda}
 \label{colsafe}
\end{figure}
